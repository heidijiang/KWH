/*I love me some border-box*/
* {
    box-sizing: border-box;
}
/*This just stops me getting horizontal scrolling if anything overflows the width*/
body {
    overflow: hidden;
}
/*Just removing default browser padding/margin*/
html,
body {
    padding: 0;
    margin: 1rem;
    color: #000000;
    font-family: arial;
}
/*Flexbox gives us the flexiness we need. The top just stays put as there is no scrolling on the body due to the page never exceeding viewport height*/
.Top_left {
    display: flex;
    align-items: left;
    justify-content: left;
    background-color: transparent;
    font-size: 2rem;
    position: relative;
    z-index: 10;
    /*height: 100px;*/

}

.hdr_img{
    display: flex;
    align-items: left;
    justify-content: left;
    position: relative;
}

.overlay_img{
    display: flex;
    align-items: left;
    justify-content: left;
    margin-top:  -18%;
    margin-left:  28%;
    z-index: 99;
    position: relative;
}

.Top_right {
    display: flex;
    align-items: right;
    justify-content: right;
    background-color: transparent;
    color: #666666;
    font-size: .8rem;
    position: relative;
    z-index: 10;
    height: 100px;

}
/*This is our main wrapping element, it's made 100vh high to ensure it is always the correct size and then moved into place and padded with negative margin and padding*/
.ContainerTop {
    display: flex;
    overflow: hidden;
    /*height: 50vh;*/
    margin-top: -100px;
    padding-top: 100px;
    position: relative;
    width: 100%;
    backface-visibility: hidden;
    will-change: overflow;
}

.Container {
    display: flex;
    overflow: hidden;
    height: 80vh;
    margin-top:  -15vh;
    padding-top: 0px;
    position: relative;
    width: 100%;
    backface-visibility: hidden;
    will-change: overflow;
}

.Container_final {
    display: flex;
    overflow: hidden;
    height: 100%;
    margin-top: 0px;
    padding-top: 0px;
    position: relative;
    width: 100%;
    backface-visibility: hidden;
    will-change: overflow;
}
/*All the scrollable sections should overflow and be whatever height they need to be. As they are flex-items (due to being inside a flex container) they could be made to stretch full height at all times if needed.
WebKit inertia scrolling is being added here for any present/future devices that are able to make use of it.
*/
.Left,
/*.Middle,*/
.Right {
    overflow: auto;
    height: auto;
    padding: 1rem;
    font-size: .8rem;
    -webkit-overflow-scrolling: touch;
    -ms-overflow-style: none;
}
/*Entirely optional â€“ just wanted to remove the scrollbar on WebKit browsers as I find them ugly*/
.Left::-webkit-scrollbar,
/*.Middle::-webkit-scrollbar,*/
.Right::-webkit-scrollbar {
    display: none;
}
/*  Left and Right are set sizes while the Middle is set to flex one so it occupies all remaining space. This could be set as a width too if prefereable, perhaps using calc.*/
.Left {
    width: 40rem;
    background-color: white;
    margin-top: 5rem;
    margin-bottom: 1rem;
}

.Right {
    width: 25rem;
    background-color: #eeeeee;
    margin-bottom: 1rem;
}

.Top_left {
    width: 40rem;
}

.hdr_img {
    max-height: 200%;
    overflow: visible;
}

.Top_right {
    width: 20rem;
}

/* Style the tab */
div.tab {
    overflow: hidden;
    background-color: #ffffff;
}

/* Style the buttons inside the tab */
div.tab button {
    background-color: inherit;
    float: left;
    border: none;
    outline: none;
    cursor: pointer;
    padding: 8px 16px;
    transition: 0.3s;
}

/* Change background color of buttons on hover */
div.tab button:hover {
    background-color: #eeeeee;
}

/* Create an active/current tablink class */
div.tab button.active {
    background-color: #ffffff;
}

/* Style the tab content */
.tabcontent {
    margin-top: -10px;
    display: none;
    font-size: .8rem;
}


#largeImgPanel {
    align-items: center;
    justify-content: center;
    visibility: hidden;
    position: fixed;
    z-index: 100;
    top: 5vh;
    left: 5vh;
    width: 80%;
    height:80%;
}